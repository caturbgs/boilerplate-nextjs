import { debounce } from 'lodash';
import Head from 'next/head';
import Image from 'next/image';
import { useRef, useState } from 'react';
import { homeRepository } from '../stores/home';
import styles from '../styles/Home.module.css';
import Error from './error';
import Loading from './loading';

export default function Home() {
	const [title, setTitle] = useState('');
	const [description, setDescription] = useState('');
	const [category, setCategory] = useState('');
	const titleDisp = useRef('');
	const descriptionDisp = useRef('');
	const categoryDisp = useRef('');
	const { home, error, isLoading } = homeRepository.useHome({
		title,
		description,
		category,
	});

	const handleChange = debounce((value, type) => {
		console.log({ type, e: value });
		switch (type) {
			case 'title':
				setTitle(value);
				titleDisp.current = value;
				break;
			case 'description':
				setDescription(value);
				descriptionDisp.current = value;
				break;
			case 'category':
				setCategory(value);
				categoryDisp.current = value;
				break;
			default:
				break;
		}
	}, 1000);

	if (isLoading) return <Loading />;
	if (error) return <Error />;

	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className={styles.main}>
				<h1 className="text-6xl leading-3 m-0">
					Welcome to{' '}
					<a
						className="no-underline text-[#0070f3] hover:underline active:underline focus:underline"
						href="https://nextjs.org">
						Next.js!
					</a>
				</h1>

				<p className={styles.description}>
					Get started by editing <code className={styles.code}>pages/index.js</code>
				</p>

				<div className="my-10 flex flex-col">
					<div className="my-2">
						<label>Name: </label>
						<input
							className="border-1 px-2 py-1 bg-slate-100"
							onChange={(e) => handleChange(e.target.value, 'title')}
							value={titleDisp.current}
						/>
					</div>
					<div className="my-2">
						<label>Description: </label>
						<input
							className="border-1 px-2 py-1 bg-slate-100"
							onChange={(e) => handleChange(e.target.value, 'description')}
							value={descriptionDisp.current}
						/>
					</div>
					<div className="my-2">
						<label>Category: </label>
						<input
							className="border-1 px-2 py-1 bg-slate-100"
							onChange={(e) => handleChange(e.target.value, 'category')}
							value={categoryDisp.current}
						/>
					</div>
				</div>

				<table>
					{home?.entries?.map((data, index) => {
						return (
							<tbody key={index}>
								<tr>
									<td>{data.API}</td>
									<td>{data.Description}</td>
									<td>{data.Auth}</td>
									<td>{data.HTTPS}</td>
									<td>{data.Cors}</td>
									<td>{data.Category}</td>
								</tr>
							</tbody>
						);
					})}
				</table>
			</main>

			<footer className={styles.footer}>
				<a
					href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
					target="_blank"
					rel="noopener noreferrer">
					Powered by{' '}
					<span className={styles.logo}>
						<Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
					</span>
				</a>
			</footer>
		</div>
	);
}
